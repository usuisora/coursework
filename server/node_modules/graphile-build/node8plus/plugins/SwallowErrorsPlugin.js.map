{"version":3,"sources":["../../src/plugins/SwallowErrorsPlugin.js"],"names":["SwallowErrorsPlugin","builder","dontSwallowErrors","hook","build","Object","assign","swallowError","e","recoverable"],"mappings":";;;;;;kBAGgB,SAASA,mBAAT,CACdC,OADc,EAEd,EAAEC,oBAAoB,KAAtB,EAFc,EAGd;AACAD,UAAQE,IAAR,CACE,OADF,EAEGC,KAAD,IAAyB;AACvB,QAAIF,iBAAJ,EAAuB;AACrB;AACA;AACA;AACA;AACA,aAAOG,OAAOC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,EAAyB;AAC9BG,qBAAaC,CAAb,EAAgB;AACd;AACAA,YAAEC,WAAF,GAAgB,IAAhB;AACA,gBAAMD,CAAN;AACD;AAL6B,OAAzB,CAAP;AAOD,KAZD,MAYO;AACL,aAAOJ,KAAP;AACD;AACF,GAlBH;AAoBD,C","file":"SwallowErrorsPlugin.js","sourcesContent":["// @flow\nimport type { Plugin, Build } from \"../SchemaBuilder\";\n\nexport default (function SwallowErrorsPlugin(\n  builder,\n  { dontSwallowErrors = false }\n) {\n  builder.hook(\n    \"build\",\n    (build: Build): Build => {\n      if (dontSwallowErrors) {\n        // This plugin is a bit of a misnomer - to better maintain backwards\n        // compatibility, `swallowError` still exists on `makeNewBuild`; and\n        // thus this plugin is really `dontSwallowErrors`.\n        // $FlowFixMe\n        return Object.assign({}, build, {\n          swallowError(e) {\n            // $FlowFixMe\n            e.recoverable = true;\n            throw e;\n          },\n        });\n      } else {\n        return build;\n      }\n    }\n  );\n}: Plugin);\n"]}