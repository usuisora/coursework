{"version":3,"sources":["../../src/plugins/ClientMutationIdDescriptionPlugin.js"],"names":["ClientMutationIdDescriptionPlugin","builder","hook","field","build","context","extend","scope","isMutationInput","fieldName","Self","description","name","isMutationPayload","args","isRootMutation","input","Object","assign"],"mappings":";;;;;;kBAGgB,SAASA,iCAAT,CACdC,OADc,EAEd;AACAA,UAAQC,IAAR,CACE,qCADF,EAEE,CAACC,KAAD,EAA2BC,KAA3B,EAAkCC,OAAlC,KAA8C;AAC5C,UAAM,EAAEC,MAAF,KAAaF,KAAnB;AACA,UAAM;AACJG,aAAO,EAAEC,eAAF,EAAmBC,SAAnB,EADH;AAEJC;AAFI,QAGFL,OAHJ;AAIA,QACE,CAACG,eAAD,IACAC,cAAc,kBADd,IAEAN,MAAMQ,WAHR,EAIE;AACA,aAAOR,KAAP;AACD;AACD,WAAOG,OACLH,KADK,EAEL;AACEQ,mBACE;AAFJ,KAFK,EAMJ,aAAYR,MAAMS,IAAN,IAAc,EAAG,eAAcF,KAAKE,IAAK,GANjD,CAAP;AAQD,GAvBH;;AA0BAX,UAAQC,IAAR,CACE,gCADF,EAEE,CAACC,KAAD,EAA2BC,KAA3B,EAAkCC,OAAlC,KAA8C;AAC5C,UAAM,EAAEC,MAAF,KAAaF,KAAnB;AACA,UAAM;AACJG,aAAO,EAAEM,iBAAF,EAAqBJ,SAArB,EADH;AAEJC;AAFI,QAGFL,OAHJ;AAIA,QACE,CAACQ,iBAAD,IACAJ,cAAc,kBADd,IAEAN,MAAMQ,WAHR,EAIE;AACA,aAAOR,KAAP;AACD;AACD,WAAOG,OACLH,KADK,EAEL;AACEQ,mBACE;AAFJ,KAFK,EAMJ,aAAYR,MAAMS,IAAN,IAAc,EAAG,eAAcF,KAAKE,IAAK,GANjD,CAAP;AAQD,GAvBH;;AA0BAX,UAAQC,IAAR,CACE,qCADF,EAEE,CAACY,IAAD,EAAWV,KAAX,EAAkBC,OAAlB,KAA8B;AAC5B,UAAM,EAAEC,MAAF,KAAaF,KAAnB;AACA,UAAM;AACJG,aAAO,EAAEQ,cAAF,EADH;AAEJL,UAFI;AAGJP;AAHI,QAIFE,OAJJ;AAKA,QAAI,CAACU,cAAD,IAAmB,CAACD,KAAKE,KAAzB,IAAkCF,KAAKE,KAAL,CAAWL,WAAjD,EAA8D;AAC5D,aAAOG,IAAP;AACD;AACD,WAAOG,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BE,aAAOV,OACLQ,KAAKE,KADA,EAEL;AACEL,qBACE;AAFJ,OAFK,EAMJ,gDACCR,MAAMS,IACP,eAAcF,KAAKE,IAAK,GARpB;AADsB,KAAxB,CAAP;AAYD,GAxBH;AA0BD,C","file":"ClientMutationIdDescriptionPlugin.js","sourcesContent":["// @flow\nimport type SchemaBuilder, { Plugin } from \"../SchemaBuilder\";\n\nexport default (function ClientMutationIdDescriptionPlugin(\n  builder: SchemaBuilder\n) {\n  builder.hook(\n    \"GraphQLInputObjectType:fields:field\",\n    (field: { name?: string }, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isMutationInput, fieldName },\n        Self,\n      } = context;\n      if (\n        !isMutationInput ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      return extend(\n        field,\n        {\n          description:\n            \"An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.\",\n        },\n        `Tweaking '${field.name || \"\"}' field in '${Self.name}'`\n      );\n    }\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field\",\n    (field: { name?: string }, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isMutationPayload, fieldName },\n        Self,\n      } = context;\n      if (\n        !isMutationPayload ||\n        fieldName !== \"clientMutationId\" ||\n        field.description\n      ) {\n        return field;\n      }\n      return extend(\n        field,\n        {\n          description:\n            \"The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.\",\n        },\n        `Tweaking '${field.name || \"\"}' field in '${Self.name}'`\n      );\n    }\n  );\n\n  builder.hook(\n    \"GraphQLObjectType:fields:field:args\",\n    (args: {}, build, context) => {\n      const { extend } = build;\n      const {\n        scope: { isRootMutation },\n        Self,\n        field,\n      } = context;\n      if (!isRootMutation || !args.input || args.input.description) {\n        return args;\n      }\n      return Object.assign({}, args, {\n        input: extend(\n          args.input,\n          {\n            description:\n              \"The exclusive input argument for this mutation. An object type, make sure to see documentation for this objectâ€™s fields.\",\n          },\n          `Adding a description to input arg for field '${\n            field.name\n          }' field in '${Self.name}'`\n        ),\n      });\n    }\n  );\n}: Plugin);\n"]}