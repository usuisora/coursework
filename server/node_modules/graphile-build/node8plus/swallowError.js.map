{"version":3,"sources":["../src/swallowError.js"],"names":["swallowError","debugWarn","e","enabled","console","warn","errorSnippet","toString","String","replace","substr","trim"],"mappings":";;;;;kBAKwBA,Y;;AAJxB;;;;;;AAEA,MAAMC,YAAY,qBAAa,qBAAb,CAAlB;AAEe,SAASD,YAAT,CAAsBE,CAAtB,EAAsC;AACnD;AACA;AACA,MAAID,UAAUE,OAAd,EAAuB;AACrB;AACAC,YAAQC,IAAR,CAAc,6BAAd;AACAJ,cAAUC,CAAV;AACD,GAJD,MAIO;AACL,UAAMI,eACJJ,KAAK,OAAOA,EAAEK,QAAT,KAAsB,UAA3B,GACIC,OAAON,CAAP,EACGO,OADH,CACW,OADX,EACoB,EADpB,EAEGC,MAFH,CAEU,CAFV,EAEa,GAFb,EAGGC,IAHH,EADJ,GAKI,IANN;AAOA,QAAIL,YAAJ,EAAkB;AAChB;AACAF,cAAQC,IAAR,CACG,8IAA6IC,YAAa,GAD7J;AAGD,KALD,MAKO;AACL;AACAF,cAAQC,IAAR,CACG,oIADH;AAGD;AACDJ,cAAUC,CAAV;AACD;AACF","file":"swallowError.js","sourcesContent":["// @flow\nimport debugFactory from \"debug\";\n\nconst debugWarn = debugFactory(\"graphile-build:warn\");\n\nexport default function swallowError(e: Error): void {\n  // BE VERY CAREFUL NOT TO THROW!\n  // XXX: Improve this\n  if (debugWarn.enabled) {\n    // eslint-disable-next-line no-console\n    console.warn(`Recoverable error occurred:`);\n    debugWarn(e);\n  } else {\n    const errorSnippet =\n      e && typeof e.toString === \"function\"\n        ? String(e)\n            .replace(/\\n.*/g, \"\")\n            .substr(0, 320)\n            .trim()\n        : null;\n    if (errorSnippet) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Recoverable error occurred; use envvar 'DEBUG=\"graphile-build:warn\"' for full error (see: https://graphile.org/postgraphile/debugging )\\n> ${errorSnippet}â€¦`\n      );\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Recoverable error occurred; use envvar 'DEBUG=\"graphile-build:warn\"' for error (see: https://graphile.org/postgraphile/debugging )`\n      );\n    }\n    debugWarn(e);\n  }\n}\n"]}