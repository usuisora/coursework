"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.singularize = exports.pluralize = exports.upperCamelCase = exports.constantCase = exports.camelCase = exports.upperFirst = exports.formatInsideUnderscores = exports.constantCaseAll = exports.bindAll = undefined;

var _upperFirst = require("lodash/upperFirst");

var _upperFirst2 = _interopRequireDefault(_upperFirst);

var _camelCase = require("lodash/camelCase");

var _camelCase2 = _interopRequireDefault(_camelCase);

var _pluralize = require("pluralize");

var _pluralize2 = _interopRequireDefault(_pluralize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const bindAll = (obj, keys) => {
  keys.forEach(key => {
    obj[key] = obj[key].bind(obj);
  });
  return obj;
};
exports.bindAll = bindAll;
const constantCaseAll = exports.constantCaseAll = str => str.replace(/[^a-zA-Z0-9_]+/g, "_").replace(/[A-Z]+/g, "_$&").replace(/__+/g, "_").replace(/^[^a-zA-Z0-9]+/, "").replace(/^[0-9]/, "_$&") // GraphQL enums must not start with a number
.toUpperCase();

const formatInsideUnderscores = exports.formatInsideUnderscores = fn => str => {
  const matches = str.match(/^(_*)([\s\S]*?)(_*)$/);
  if (!matches) {
    throw new Error("Impossible?"); // Satiate Flow
  }
  const [, start, middle, end] = matches;
  return `${start}${fn(middle)}${end}`;
};

const upperFirst = exports.upperFirst = formatInsideUnderscores(_upperFirst2.default);
const camelCase = exports.camelCase = formatInsideUnderscores(_camelCase2.default);
const constantCase = exports.constantCase = formatInsideUnderscores(constantCaseAll);
const upperCamelCase = exports.upperCamelCase = str => upperFirst(camelCase(str));

const pluralize = exports.pluralize = str => (0, _pluralize2.default)(str);
const singularize = exports.singularize = str => _pluralize2.default.singular(str);
//# sourceMappingURL=utils.js.map