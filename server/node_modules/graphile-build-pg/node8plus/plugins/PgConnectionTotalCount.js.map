{"version":3,"sources":["../../src/plugins/PgConnectionTotalCount.js"],"names":["PgConnectionTotalCount","builder","hook","fields","build","context","extend","inflection","graphql","GraphQLInt","scope","isPgRowConnectionType","pgIntrospection","table","fieldWithHooks","Self","kind","namespace","tableTypeName","tableType","totalCount","addDataGenerator","pgCalculateTotalCount","description","type","isPgConnectionTotalCountField","name"],"mappings":";;;;;;kBAGgB,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AACvDA,UAAQC,IAAR,CAAa,0BAAb,EAAyC,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,KAA4B;AACnE,UAAM;AACJC,YADI;AAEJC,gBAFI;AAGJC,eAAS,EAAEC,UAAF;AAHL,QAIFL,KAJJ;AAKA,UAAM;AACJM,aAAO,EAAEC,qBAAF,EAAyBC,iBAAiBC,KAA1C,EADH;AAEJC,oBAFI;AAGJC;AAHI,QAIFV,OAJJ;;AAMA,QACE,CAACM,qBAAD,IACA,CAACE,KADD,IAEAA,MAAMG,IAAN,KAAe,OAFf,IAGA,CAACH,MAAMI,SAJT,EAKE;AACA,aAAOd,MAAP;AACD;AACD,UAAMe,gBAAgBX,WAAWY,SAAX,CAAqBN,KAArB,CAAtB;;AAEA,WAAOP,OACLH,MADK,EAEL;AACEiB,kBAAYN,eACV,YADU,EAEV,CAAC,EAAEO,gBAAF,EAAD,KAA0B;AACxBA,yBAAiB,MAAM;AACrB,iBAAO;AACLC,mCAAuB;AADlB,WAAP;AAGD,SAJD;AAKA,eAAO;AACLC,uBAAc,wBAAuBL,aAAc,uCAD9C;AAELM,gBAAMf;AAFD,SAAP;AAID,OAZS,EAaV;AACEgB,uCAA+B;AADjC,OAbU;AADd,KAFK,EAqBJ,oCAAmCV,KAAKW,IAAK,GArBzC,CAAP;AAuBD,GA7CD;AA8CD,C","file":"PgConnectionTotalCount.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgConnectionTotalCount(builder) {\n  builder.hook(\"GraphQLObjectType:fields\", (fields, build, context) => {\n    const {\n      extend,\n      inflection,\n      graphql: { GraphQLInt },\n    } = build;\n    const {\n      scope: { isPgRowConnectionType, pgIntrospection: table },\n      fieldWithHooks,\n      Self,\n    } = context;\n\n    if (\n      !isPgRowConnectionType ||\n      !table ||\n      table.kind !== \"class\" ||\n      !table.namespace\n    ) {\n      return fields;\n    }\n    const tableTypeName = inflection.tableType(table);\n\n    return extend(\n      fields,\n      {\n        totalCount: fieldWithHooks(\n          \"totalCount\",\n          ({ addDataGenerator }) => {\n            addDataGenerator(() => {\n              return {\n                pgCalculateTotalCount: true,\n              };\n            });\n            return {\n              description: `The count of *all* \\`${tableTypeName}\\` you could get from the connection.`,\n              type: GraphQLInt,\n            };\n          },\n          {\n            isPgConnectionTotalCountField: true,\n          }\n        ),\n      },\n      `Adding totalCount to connection '${Self.name}'`\n    );\n  });\n}: Plugin);\n"]}