{"version":3,"sources":["../src/utils.js"],"names":["parseTags","str","split","reduce","prev","curr","text","Object","assign","match","key","substr","trim","value","replace","tags","hasOwnProperty","Array","isArray"],"mappings":";;;;;AACO,MAAMA,gCAAaC,GAAD,IAAiB;AACxC,SAAOA,IAAIC,KAAJ,CAAU,OAAV,EAAmBC,MAAnB,CACL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACd,QAAID,KAAKE,IAAL,KAAc,EAAlB,EAAsB;AACpB,aAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BE,cAAO,GAAEF,KAAKE,IAAK,KAAID,IAAK;AADC,OAAxB,CAAP;AAGD;AACD,UAAMI,QAAQJ,KAAKI,KAAL,CAAW,+BAAX,CAAd;AACA,QAAI,CAACA,KAAL,EAAY;AACV,aAAOF,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BE,cAAMD;AADuB,OAAxB,CAAP;AAGD;AACD,UAAMK,MAAMD,MAAM,CAAN,EAASE,MAAT,CAAgB,CAAhB,EAAmBC,IAAnB,EAAZ;AACA,UAAMC,QAAQJ,MAAM,CAAN,MAAaJ,IAAb,GAAoB,IAApB,GAA2BA,KAAKS,OAAL,CAAaL,MAAM,CAAN,CAAb,EAAuB,EAAvB,CAAzC;AACA,WAAOF,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BW,YAAMR,OAAOC,MAAP,CAAc,EAAd,EAAkBJ,KAAKW,IAAvB,EAA6B;AACjC,SAACL,GAAD,GAAO,CAACN,KAAKW,IAAL,CAAUC,cAAV,CAAyBN,GAAzB,CAAD,GACHG,KADG,GAEHI,MAAMC,OAAN,CAAcd,KAAKW,IAAL,CAAUL,GAAV,CAAd,IACE,CAAC,GAAGN,KAAKW,IAAL,CAAUL,GAAV,CAAJ,EAAoBG,KAApB,CADF,GAEE,CAACT,KAAKW,IAAL,CAAUL,GAAV,CAAD,EAAiBG,KAAjB;AAL2B,OAA7B;AADuB,KAAxB,CAAP;AASD,GAxBI,EAyBL;AACEE,UAAM,EADR;AAEET,UAAM;AAFR,GAzBK,CAAP;AA8BD,CA/BM","file":"utils.js","sourcesContent":["// @flow\nexport const parseTags = (str: string) => {\n  return str.split(/\\r?\\n/).reduce(\n    (prev, curr) => {\n      if (prev.text !== \"\") {\n        return Object.assign({}, prev, {\n          text: `${prev.text}\\n${curr}`,\n        });\n      }\n      const match = curr.match(/^@[a-zA-Z][a-zA-Z0-9_]*($|\\s)/);\n      if (!match) {\n        return Object.assign({}, prev, {\n          text: curr,\n        });\n      }\n      const key = match[0].substr(1).trim();\n      const value = match[0] === curr ? true : curr.replace(match[0], \"\");\n      return Object.assign({}, prev, {\n        tags: Object.assign({}, prev.tags, {\n          [key]: !prev.tags.hasOwnProperty(key)\n            ? value\n            : Array.isArray(prev.tags[key])\n              ? [...prev.tags[key], value]\n              : [prev.tags[key], value],\n        }),\n      });\n    },\n    {\n      tags: {},\n      text: \"\",\n    }\n  );\n};\n"]}